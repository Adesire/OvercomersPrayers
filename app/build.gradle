apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'


//def keystorePropertiesFile = rootProject.file("keystore.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
//    signingConfigs {
//        op {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.overcomersprayer.app.overcomersprayers"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            //signingConfig signingConfigs.op
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "Overcomers' Prayers"
            outputFileName = appName + " - (version ${variant.versionName}).apk"
        }
    }
}


configurations {
    //all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha04'
    implementation 'com.google.firebase:firebase-database:16.1.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-auth:16.2.0'
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0-alpha01'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha02'
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha03'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.github.Flutterwave:rave-android:1.0.35'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.16'
    implementation 'com.evernote:android-state:1.4.1'
    annotationProcessor 'com.evernote:android-state-processor:1.4.1'
    implementation 'com.google.firebase:firebase-messaging:17.4.0'
    api "com.google.auto.value:auto-value-annotations:1.6.2"
    annotationProcessor "com.google.auto.value:auto-value:1.6.2"
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'
    implementation('com.github.ozodrukh:CircularReveal:2.0.1@aar') {
        transitive = true;
    }
    implementation 'com.github.javiersantos:PiracyChecker:1.2.5'
    implementation 'androidx.work:work-runtime:2.2.0'
}
